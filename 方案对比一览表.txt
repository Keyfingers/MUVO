╔════════════════════════════════════════════════════════════════════════════╗
║                    方案A vs 方案B 快速对比表                                 ║
╚════════════════════════════════════════════════════════════════════════════╝

┌──────────────┬────────────────────────┬────────────────────────┐
│   维度       │   方案A (精确映射)      │   方案B (场景级)        │
├──────────────┼────────────────────────┼────────────────────────┤
│ 标签粒度     │ 🎯 点级 (最精细)       │ 🔵 场景级 (粗糙)        │
│ 可行性       │ ❌ 坐标系问题未解决     │ ✅ 立即可用            │
│ 开发时间     │ ⏰ 2-5天 (不保证成功)  │ ⏰ 2小时               │
│ 标签可靠性   │ 🟡 依赖坐标映射正确     │ ✅ 100%可靠            │
│ 训练效果     │ 🎯 最好 (如果成功)     │ 🔵 可接受              │
│ 异常定位     │ ✅ 精确到点            │ ❌ 只能判断场景有无     │
│ 风险         │ 🔴 高 (可能失败)       │ 🟢 低                  │
└──────────────┴────────────────────────┴────────────────────────┘

╔════════════════════════════════════════════════════════════════════════════╗
║                         方案A - 核心问题                                     ║
╚════════════════════════════════════════════════════════════════════════════╝

问题1: 体素索引不从0开始
   - 推导: VX = [0, 191]
   - 实际: VX = [310, 697]  ❌ 完全不匹配

问题2: 点云范围远超网格
   - 推导覆盖: X [-6.4, 32.0] 米 (38米宽)
   - 实际点云: X [-95.78, 98.88] 米 (194米宽)  ❌ 5倍差距

问题3: 缺少关键信息
   - ❓ 体素网格的全局原点在哪？
   - ❓ config中的参数确切含义？
   - ❓ AnoVox如何定义坐标系？

╔════════════════════════════════════════════════════════════════════════════╗
║                      涉及的核心代码文件                                      ║
╚════════════════════════════════════════════════════════════════════════════╝

1. precise_voxel_mapping_v2.py (163行)
   - 问题: 第48-50行 grid_origin计算错误
   - 需要: 正确的坐标系参数

2. muvo/config.py
   - 第103-105行: VOXEL.SIZE, VOXEL.RESOLUTION, VOXEL.EV_POSITION
   - 第138行: BEV.OFFSET_FORWARD
   - 需要: 明确这些参数的含义

3. train_voxelwise_detection.py (439行)
   - 第228行: 当前使用随机标签
   - 需要: 替换为精确映射

╔════════════════════════════════════════════════════════════════════════════╗
║                         建议的讨论要点                                       ║
╚════════════════════════════════════════════════════════════════════════════╝

与导师讨论:

1. ⏰ 时间压力
   - 是否需要立即出结果? → 方案B
   - 是否追求最佳效果? → 解决方案A

2. 📚 数据集理解
   - 是否有AnoVox的完整文档?
   - 是否能联系数据集作者?
   - 是否能查看体素生成源码?

3. 🎯 技术路线
   - 先B后A (快速验证 → 后续优化)
   - 直接攻克A (一步到位)

4. 📝 论文需求
   - 场景级检测是否足够?
   - 是否需要可视化异常位置?

╔════════════════════════════════════════════════════════════════════════════╗
║                           推荐策略                                          ║
╚════════════════════════════════════════════════════════════════════════════╝

🎯 建议: 先实施方案B，验证可行性

理由:
✅ 2小时内完成
✅ 标签100%可靠
✅ 一定能看到Recall > 0%
✅ 验证模型架构work
✅ 后续可升级到方案A

后续路径:
1. 方案B训练成功 → 证明模型有效
2. 与导师/作者沟通 → 获取坐标系信息
3. 修复方案A → 升级到点级检测
4. 对比实验 → 论文ablation study

